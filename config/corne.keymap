/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define LWR LOWER
#define RSE RAISE
#define ADJ ADJUST

&mt {
    quick_tap_ms = <180>;
    tapping-term-ms = <250>;
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {

     behaviors {
            //                 Key positions
            //       0  1  2  3  4  5    6  7  8  9 10 11
            //      12 13 14 15 16 17   18 19 20 21 22 23
            //      24 25 26 27 28 29   30 31 32 33 34 35
            //               36 37 38   39 40 41

            hml: homerow_mods_left {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_LEFT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <250>;
                quick-tap-ms = <180>;
                bindings = <&kp>, <&kp>;

                hold-trigger-key-positions = <
                                             6  7  8  9 10
                           13 14 15 16      18 19 20 21 22
                              26            30 31 32 33 34
                                  37 38   39 40 41
                >;

                // <---[[right-hand keys + all homerow mods + all thumbs]]
            };

            hmr: homerow_mods_right {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_RIGHT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <250>;
                quick-tap-ms = <180>;
                bindings = <&kp>, <&kp>;

                hold-trigger-key-positions = <
                            1  2  3  4  5
                           13 14 15 16 17      19 20 21 22
                           25 26 27 28 29            33
                                  37 38   39 40 41
                >;

                // <---[[left-hand keys + all homerow mods + all thumbs]]
            };
        };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 13>;
            bindings = <&kp ESC>;
        };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LPAR>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp RPAR>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LBKT>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp RBKT>;
        };

        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp LBRC>;
        };

        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RBRC>;
        };

        combo_grave {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp GRAVE>;
        };

        combo_tilda {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp TILDE>;
        };

        combo_quot {
            timeout-ms = <50>;
            key-positions = <10 22>;
            bindings = <&kp QUOT>;
        };

        prntscr {
            bindings = <&prntscr_macro>;
            key-positions = <4 3 2>;
        };

        ide_b {
            bindings = <&ide_b_macro>;
            key-positions = <1 13 25>;
        };

        ide_f {
            bindings = <&ide_f_macro>;
            key-positions = <22 10 34>;
        };
        ide_go_edit {
            bindings = <&ide_go_edit_macro>;
            key-positions = <10 9 8>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        prntscr_macro: prntscr_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LCMD>;

            label = "PRNTSCR_MACRO";
        };

        ide_b_macro: ide_b_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_release>,
                <&kp LCMD>;

            label = "IDE_B_MACRO";
        };

        ide_f_macro: ide_f_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_release>,
                <&kp LCMD>;

            label = "IDE_F_MACRO";
        };
        ide_go_edit_macro: ide_go_edit_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp BSPC>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LCMD>;

            label = "IDE_GO_EDIT_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q         &kp W        &kp E          &kp R           &kp T       &kp Y         &kp U          &kp I         &kp O        &kp P            &none
&none  &hml LCTRL A  &hml LALT S  &hml LCMD D    &hml LSHFT F    &kp G       &kp H         &hmr RSHFT J   &hmr RCMD K   &hmr RALT L  &hmr RCTRL SEMI  &none
&none  &kp Z  &kp X  &kp C        &kp V          &kp B           &kp N       &kp M         &kp COMMA      &kp DOT       &kp FSLH     &none
                                  &lt RSE TAB  &lt LWR SPACE   &kp LCMD    &mt RCMD RET  &lt RSE BSPC     &none
            >;
        };

        lower_layer {
            bindings = <
&none  &kp N1     &kp N2    &kp N3       &kp N4         &kp N5      &kp N6        &kp N7           &kp N8          &kp N9        &kp N0      &none
&none  &kp LCTRL  &kp LALT  &kp LCMD     &kp LSHFT      &none       &kp LEFT      &kp DOWN         &kp UP          &kp RIGHT     &kp RCTRL   &none
&none  &kp LCTRL  &kp LALT  &kp LCMD     &kp LSHFT      &none       &kp HOME      &mt RSHFT PG_DN  &mt RCMD PG_UP  &kp END       &caps_word  &none
                            &lt RSE TAB  &lt LWR SPACE  &kp LCMD    &mt RCMD RET  &mo RSE          &none
            >;
        };

        raise_layer {
            bindings = <
&none  &kp EXCL       &kp AT        &kp HASH      &kp DLLR        &kp PRCNT    &kp CARET     &kp AMPS          &kp KP_MULTIPLY   &kp LPAR        &kp RPAR         &none
&none  &hml LCTRL F1  &hml LALT F2  &hml LCMD F3  &hml LSHFT F4   &kp F5       &kp MINUS     &hmr RSHFT EQUAL  &hmr RCMD LBKT    &hmr RALT RBKT  &hmr RCTRL BSLH  &none
&none  &mt LCTRL F6   &mt LALT F7   &mt LCMD F8   &mt LSHFT F11   &kp F12      &kp UNDER     &mt RSHFT PLUS    &mt RCMD LBRC     &mt RALT RBRC   &mt RCTRL PIPE   &none
                                    &lt RSE TAB   &mo LWR         &kp GRAVE    &mt RCMD RET  &lt RSE BSPC      &none
            >;
        };

        adjust_layer {
            bindings = <
&none  &bt BT_CLR    &none         &none         &none         &none           &none         &kp K_MUTE    &none  &none  &bootloader  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_BRI_UP  &kp C_VOL_UP  &none  &none  &none        &none
&none  &bootloader   &none         &none         &none         &none           &kp C_BRI_DN  &kp C_VOL_DN  &none  &none  &none        &none
                                   &none         &none         &none           &none         &none         &none
            >;
        };
    };
};
